<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 7.</title>
    <link>http://nanamisawa.github.io/tags/linux/</link>
    <description>Recent content in Linux on 7.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 15 Mar 2020 18:15:07 +0900</lastBuildDate>
    
	<atom:link href="http://nanamisawa.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>deinvimのsettingについて</title>
      <link>http://nanamisawa.github.io/post/20200315/</link>
      <pubDate>Sun, 15 Mar 2020 18:15:07 +0900</pubDate>
      
      <guid>http://nanamisawa.github.io/post/20200315/</guid>
      <description>新しくタブレットPCを買ったのでWSLの設定を簡単にメモ （bashrc, vimrcの備忘録）
1# ~/.bashrc: executed by bash(1) for non-login shells. 2# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc) 3# for examples 4 5# If not running interactively, don&amp;#39;t do anything 6case $- in 7 *i*) ;; 8 *) return;; 9esac 10 11# don&amp;#39;t put duplicate lines or lines starting with space in the history. 12# See bash(1) for more options 13HISTCONTROL=ignoreboth 14 15# append to the history file, don&amp;#39;t overwrite it 16shopt -s histappend 17 18# for setting history length see HISTSIZE and HISTFILESIZE in bash(1) 19HISTSIZE=1000 20HISTFILESIZE=2000 21 22# check the window size after each command and, if necessary, 23# update the values of LINES and COLUMNS.</description>
    </item>
    
    <item>
      <title>カレントディレクトリのままsshしたいときのための.bashrc設定</title>
      <link>http://nanamisawa.github.io/post/20190415/</link>
      <pubDate>Mon, 15 Apr 2019 00:44:03 +0900</pubDate>
      
      <guid>http://nanamisawa.github.io/post/20190415/</guid>
      <description>※Qiitaと同じ内容です
前提  NFSで同様にファイルサーバがマウントされている計算機間でのsshログイン sshログイン後も元いたディレクトリのままになるようなコマンドを.bashrcで設定したい（通常はsshすると下のようにhomeディレクトリに移動する　いちいち元の場所にcdするのは面倒）
  1[misawa@host1 test]$ ssh host2 2[misawa@host2 ~]$ 失敗例 1function sshcd(){ 2	current=`pwd` 3	ssh $1 &amp;#34;cd $current&amp;#34; 4} これだとcdを実行したあと閉じるので元に戻ってしまう（ターミナルの見た目上は変化がない）
1[misawa@host1 test]$ sshcd host2 2[misawa@host1 test]$ 成功例 1function sshcd(){ 2	current=`pwd` 3	ssh -t $1 &amp;#34;cd $current&amp;amp;&amp;amp; /bin/bash&amp;#34; 4} こうすることでうまくいきました。
1[misawa@host1 test]$ sshcd host2 2[misawa@host2 test]$ 作業時間がほんのちょっと短縮できます。
※とても参考にさせて頂きました
https://qiita.com/kanemu/items/679c4e14aee15441e33f</description>
    </item>
    
  </channel>
</rss>